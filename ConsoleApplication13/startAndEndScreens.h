#pragma once


#include "pch.h"
#include <iostream>
#include <Windows.h>
#include <conio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include "utilidades.h"
#include "mapsAndRunners.h"
#include "ConsoleApplication13.cpp"


using namespace std;
using namespace System;


int start[FILAS][COLUMNAS] = { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,2,2,2,2,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,2,0,0,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,2,5,5,5,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,2,4,0,0,0,0,5,2,0,3,0,5,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,4,0,1,0,0,0,2,4,0,0,5,2,0,0,0,3,0,5,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,4,1,0,0,0,0,0,2,2,2,5,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,5,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,4,0,0,5,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,4,0,0,0,0,5,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,0,0,0,0,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,6,0,0,6,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,6,0,0,6,0,6,6,0,6,0,0,6,0,0,0,0,6,0,0,0,6,0,0,6,0,6,0,0,0,0,6,0,0,6,0,0,0,0,0,6,0,6,0,0,6,0,0,0,0,6,0,0,0,0,6,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,0,0,6,0,6,0,6,6,0,0,6,0,0,0,0,6,0,0,0,6,0,0,6,0,6,0,6,6,0,6,0,0,6,0,0,6,6,6,6,0,6,0,0,6,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,6,6,6,0,6,0,6,6,0,0,6,0,0,0,0,6,0,0,0,6,6,6,6,0,6,0,0,6,0,6,0,0,6,0,0,6,0,0,0,0,6,0,0,6,0,6,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,0,0,6,0,6,0,0,6,0,0,6,0,0,0,6,6,6,6,0,6,0,0,6,0,6,6,6,6,0,6,6,6,6,0,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} };

void drawStart(int start[FILAS][COLUMNAS]) {
    for (int i = 0; i < FILAS; i++)
    {
        for (int j = 0; j < COLUMNAS; j++)
        {
            setxy(j, i);
            if (start[i][j] == 0) changeColor(0); //fondo
            if (start[i][j] == 1) changeColor(2);// primer aro
            if (start[i][j] == 2) changeColor(15);// segundo aro
            if (start[i][j] == 3) changeColor(3);//tercer aro
            if (start[i][j] == 4) changeColor(1);// cuarto aro 
            if (start[i][j] == 5) changeColor(4); //quinto aro
            if (start[i][j] == 6) changeColor(13); //letras de abajo
            cout << (char)219;
        }
    }

}
//void instructions(char& input, int& pag){
//	int pos = 3;
//
//	while (1)
//	{
//
//		if (_kbhit()) {
//			input = _getch();
//			if (input == leftMov) {
//				pos = 3;
//				Console::ForegroundColor = ConsoleColor::Blue;
//				Console::SetCursorPosition(5, 38); cout << "volver";
//				Console::SetCursorPosition(29, 38); cout << "     ";
//				Console::SetCursorPosition(3, 32); printf("    *");
//				Console::SetCursorPosition(3, 33); printf("  * * * *");
//				Console::SetCursorPosition(3, 34); printf("* * * * *");
//				Console::SetCursorPosition(3, 35); printf("  * * * *");
//				Console::SetCursorPosition(3, 36); printf("    *");
//				Console::ForegroundColor = ConsoleColor::White;
//				Console::SetCursorPosition(27, 32); printf("    *");
//				Console::SetCursorPosition(27, 33); printf("* * * *  ");
//				Console::SetCursorPosition(27, 34); printf("* * * * *");
//				Console::SetCursorPosition(27, 35); printf("* * * *  ");
//				Console::SetCursorPosition(27, 36); printf("    *");
//			}
//			else if (input == rightMov) {
//				pos = 27;
//				Console::ForegroundColor = ConsoleColor::White;
//				Console::SetCursorPosition(3, 32); printf("    *");
//				Console::SetCursorPosition(3, 33); printf("  * * * *");
//				Console::SetCursorPosition(3, 34); printf("* * * * *");
//				Console::SetCursorPosition(3, 35); printf("  * * * *");
//				Console::SetCursorPosition(3, 36); printf("    *");
//				Console::ForegroundColor = ConsoleColor::Blue;
//				Console::SetCursorPosition(27, 32); printf("    *");
//				Console::SetCursorPosition(27, 33); printf("* * * *  ");
//				Console::SetCursorPosition(27, 34); printf("* * * * *");
//				Console::SetCursorPosition(27, 35); printf("* * * *  ");
//				Console::SetCursorPosition(27, 36); printf("    *");
//				Console::SetCursorPosition(5, 38); cout << "      ";
//				Console::SetCursorPosition(29, 38); cout << "jugar";
//			}
//			else if (pos == 27 && input == 13) {
//				pag = 1;
//				Console::Clear();
//				break;
//			}
//			else if (pos == 3 && input == 13) {
//				input = 0;
//				Console::Clear();
//				break;
//			}
//		}
//	}
//
//}